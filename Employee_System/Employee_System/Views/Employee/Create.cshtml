@{ 
   ViewBag.Title = "Employee";
}

@using EMSDomain.ViewModel.Employee

@model EmpAllItem
@*@model EmployeeItem*@
@{
    ViewBag.Title = "Add Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Scripts{
  
    <script type="text/javascript">
        $(document).ready(function () {
            $('#RejoinDate').datepicker();
        });
    </script>
}



<style type="text/css">.thumb-image{float:left;width:100px;height:110px;border: 1px solid #5bc0de;position:relative;padding:5px;}</style>
<script type="text/javascript">
    function OnlyNumeric(e) {
        if ((e.which < 48 || e.which > 57)) {
            if (e.which == 8 || e.which == 46 || e.which == 0) {
                return true;
            }
            else {
                return false;
            }
        }
    }
</script>

<script src="~/Content/bootstrap-colorpicker.min.js"></script>
@using (@Html.BeginForm("Create", "Employee", FormMethod.Post, new { @id = "frmCreateEmployee", enctype = "multipart/form-data" }))
{

    
    @Html.AntiForgeryToken()          // this is for prevent CSRF attack
    @Html.ValidationSummary(true)
    @Html.HiddenFor(m => m.EmployeeItem.id)    
    
    <script src="~/Content/bootstrap-colorpicker.min.js"></script>
    <section class="content-header">
        <h1>Employee <small>Master</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="~/Dashboard/Index"><i class="fa fa-dashboard"></i>Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
    </section>    
@*<div class="container">*@
    <div class="panel panel-info">
        <div class="panel-heading">Employee Details</div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(m => m.EmployeeItem.Photo, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    @*<img src="#" id="imgThumbnail" alt="preview" class="img-rounded" width="100" height="100" />*@
                    <div id="image-holder" class="img-rounded"></div>
                    <input type="file" name="file" onchange="ChangeImage()" id="file" class="form-control btn btn-info" />
                </div>
                
                @Html.LabelFor(m => m.EmployeeItem.Empno, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.EmployeeItem.Empno, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(m => m.EmployeeItem.Empno)*@
                </div>
                <div class="col-sm-12" style="height: 5px;"></div>
                @Html.LabelFor(m => m.EmployeeItem.Compid, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.DropDownListFor(m => m.EmployeeItem.Compid, new SelectList(Model.EmployeeItem.CompanyList, "id", "CompName"), "--Select Company--", new { @class = "form-control", @id = "ddlComp" })
                        @Html.ValidationMessageFor(m => m.EmployeeItem.Compid)
                    </div>
                    @Html.LabelFor(m => m.EmployeeItem.Branchid, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.DropDownListFor(m => m.EmployeeItem.Branchid, new SelectList(Model.EmployeeItem.BranchList, "id", "BranchName"), "--Select Branch--", new { @class = "form-control", @id = "Branch_ID" })
                        
                    </div>
                    <div class="col-sm-12" style="height: 5px;"></div>
                @Html.LabelFor(m => m.EmployeeItem.Empname, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.EmployeeItem.Empname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.EmployeeItem.Empname)
                    </div>
                    @Html.LabelFor(m => m.EmployeeItem.EmployeeType, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.RadioButtonFor(m => m.EmployeeItem.EmployeeType, "Supervisor", new { @class = "flat-red" }) Supervisor
                                        @Html.RadioButtonFor(m => m.EmployeeItem.EmployeeType, "Employee", new { @class = "flat-red" }) Employee
                        @Html.ValidationMessageFor(m => m.EmployeeItem.EmployeeType)
                    </div>
                    <div class="col-sm-12" style="height: 5px;"></div>
                    @Html.LabelFor(m => m.EmployeeItem.alias, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.alias, new { @class = "form-control" })
                    </div>

                    @Html.LabelFor(m => m.EmployeeItem.JobTitle, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @*@Html.TextBoxFor(m => m.EmployeeItem.JobTitle, new { @class = "form-control" })*@
                        @Html.DropDownListFor(m => m.EmployeeItem.JobTitle, new SelectList(Model.listMaster, "Id", "Name"), "--Select Job Title--", new { @class = "form-control"})
                    </div>
                    <div class="col-sm-12" style="height: 5px;"></div>

                    
                    @Html.LabelFor(m => m.EmployeeItem.FileNumber, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.FileNumber, new { @class = "form-control" })
                    </div>
                    @Html.LabelFor(m => m.EmployeeItem.BasicSalary, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.BasicSalary, new { @class = "form-control", @type = "number" })
                        @Html.ValidationMessageFor(m => m.EmployeeItem.BasicSalary)
                    </div>

                    <div class="col-sm-12" style="height: 5px;"></div>
                    @Html.LabelFor(m => m.EmployeeItem.Mobile, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.Mobile, new { @class = "form-control", @onkeypress = "OnlyNumeric(this);", @type = "number" })
                        @Html.ValidationMessageFor(m => m.EmployeeItem.Mobile)
                    </div>
                    @Html.LabelFor(m => m.EmployeeItem.HomeTel, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.HomeTel, new { @class = "form-control", @onkeypress = "OnlyNumeric(this);" })
                    </div>

                    <div class="col-sm-12" style="height: 5px;"></div>
                    @Html.LabelFor(m => m.EmployeeItem.LocalTel, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.LocalTel, new { @class = "form-control", @onkeypress = "OnlyNumeric(this);" })
                    </div>
                @Html.LabelFor(m => m.EmployeeItem.Email, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.EmployeeItem.Email)
                    </div>
                    
                    <div class="col-sm-12" style="height: 5px;"></div>

                    @* @Html.LabelFor(m => m.EmployeeItem.DOL, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.DOL, new { @class = "form-control datepicker" })
                    </div>*@

                    @* @Html.LabelFor(m => m.EmployeeItem.RejoinDate, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                   
                        @Html.TextBoxFor(m => m.EmployeeItem.RejoinDate, new { @class = "form-control pull-right datepicker" })
                         @Html.ValidationMessageFor(model => model.EmployeeItem.RejoinDate)
                 
                        </div>*@

                    <div class="col-sm-12" style="height: 5px;"></div>
                @Html.LabelFor(m => m.EmployeeItem.DOB, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.DOB, new { @class = "form-control datepicker" })
                    </div>
                    @Html.LabelFor(m => m.EmployeeItem.DOJ, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @*  @Html.TextBoxFor(m => m.DOJ,new { @class = "datepicker", @type="date" })*@
                        @Html.TextBoxFor(m => m.EmployeeItem.DOJ, new { @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(m => m.EmployeeItem.DOJ)
                    </div>
                    <div class="col-sm-12" style="height: 5px;"></div>
                @Html.LabelFor(m => m.EmployeeItem.Graduity, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.Graduity, new { @class = "form-control" })
                    </div>

                    @*@Html.LabelFor(m => m.EmployeeItem.Status, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-4">
                        @Html.RadioButtonFor(m => m.EmployeeItem.Status, "Active", new { @class = "flat-red" }) Active
                                        @Html.RadioButtonFor(m => m.EmployeeItem.Status, "InActive", new { @class = "flat-red" }) In-Active
                    </div>*@
                    <div class="col-sm-12" style="height: 5px;"></div>
               @* @Html.LabelFor(m => m.EmployeeItem.DueDate, new { @class = "col-sm-2 control-label" })

                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.DueDate, new { @class = "form-control datepicker" })

                    </div>*@
                   @* @Html.LabelFor(m => m.EmployeeItem.Profile, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.EmployeeItem.Profile, new { @class = "form-control" })
                    </div>*@
                </div>
                <div class="col-sm-12" style="height: 5px;"></div>
                <div class="col-xs-10">
                    <div class="col-sm-3" style="width: 179px;"></div>
                    <input type="Submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
   
}
<script lang="javascript" type="text/javascript">
    $(document).ready(function () {

        $("#ddlComp").change(function () {
            $("#divLoading").show();
            debugger;
            var CompIds = $('#ddlComp').val();
            $.ajax(
            {
                url: '@Url.Action("FillBranch", "VehicleMaster")',
                    type: "GET",
                    datatype: "JSON",
                    data: { Compid: CompIds },
                    success: function (Branch_master) {

                        $("#Branch_ID").html("");  // clear before appending new list 
                        $("#Branch_ID").append("<option value='0'>--Select Branch--</option>");
                        
                        $.each(Branch_master, function (i, Branch_ID) {

                            $("#Branch_ID").append(

                                $('<option></option>').val(Branch_ID.id).html(Branch_ID.BranchName));
                            
                        });
                        $("#divLoading").hide();
                    }
            });
            
        });
        $("#divLoading").hide();
        });
</script>
<script>
    $("#file").on('change', function () {

        //Get count of selected files
        var countFiles = $(this)[0].files.length;

        var imgPath = $(this)[0].value;
        var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
        var image_holder = $("#image-holder");
        image_holder.empty();

        if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
            if (typeof (FileReader) != "undefined") {

                //loop for each file selected for uploaded.
                for (var i = 0; i < countFiles; i++) {

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("<img />", {
                            "src": e.target.result,
                            "class": "img-rounded thumb-image"
                        }).appendTo(image_holder);
                    }

                    image_holder.show();
                    reader.readAsDataURL($(this)[0].files[i]);
                }

            } else {
                alert("This browser does not support FileReader.");
            }
        } else {
            alert("Pls select only images");
        }
    });
        </script>
