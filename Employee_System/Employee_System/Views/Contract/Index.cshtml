@{ 
    ViewBag.Title = "Contract";
}

@using EMSDomain.ViewModel

@model ContractModel

@using (@Html.BeginForm("Index", "Contract", FormMethod.Post, new { @id = "frmContract", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.Viewbagidformenu, new { @Value = @ViewBag.Menuid })
    
    <section class="content-header">
        <h1>Contract <small>Master</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="~/Dashboard/Index"><i class="fa fa-dashboard"></i>Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
    </section>
    <div class="panel panel-info" id="dvAdd">
        <div class="panel-heading">Contract Details
            <input type="button" id="btnBack" value="Back" class="btnAdd btn btn-primary" /></div>
        <div class="panel-body">
            <div class="form-group">


                @Html.Label("*Contract For", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.ContarctFor, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ContarctFor)
                </div>

                @Html.Label("Contarct With", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.ContractWith, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ContractWith)
                </div>
                <div class="col-sm-12" style="height: 5px;"></div>
                @Html.Label("*Company", new { @class = "col-sm-2 control-label" })

                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.CompID, new SelectList(Model.ListComp, "id", "CompName"), "--Select Company--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CompID)
                </div>
                @Html.Label("Amount", new { @class = "col-sm-2 control-label" })

                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control" })

                </div>
                <div class="col-sm-12" style="height: 5px;"></div>
                @Html.Label("*From Date", new { @class = "col-sm-2 control-label" })

                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.FrmDate, new { @class = "form-control datepicker" })
                    @Html.ValidationMessageFor(m => m.FrmDate)
                </div>

                @Html.Label("*To Date", new { @class = "col-sm-2 control-label" })

                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control datepicker" })
                    @Html.ValidationMessageFor(m => m.ToDate)
                </div>




                <div class="col-sm-12" style="height: 5px;"></div>
                @Html.Label("Document", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    @*<img src="#" id="imgThumbnail" alt="preview" class="img-rounded" width="100" height="100" />*@

                    <input type="file" name="files" id="files" class="btn btn-info" />
                </div>

                <div class="col-sm-12" style="height: 5px;"></div>
                <div class="col-xs-10">
                    <div class="col-sm-3" style="width: 179px;"></div>
                    <input type="Submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-info" id="dvGrid">
        <div class="panel-heading">Contract List <span class="label label-primary">@Model.ListContract.Count</span>
            <input type="button" id="btnAdd" value="Add New" class="btnAdd btn btn-primary" /></div>
        <div class="panel-body">
            <div class="table-responsive">
                <table class="table" id="tbl">
                    <thead>
                        <tr>
                            <th>Contract For</th>
                            <th>Date</th>
                            <th>Contarct With</th>
                            <th>Amount</th>
                            <th>Document</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ListContract)
                        {
                            <tr>
                                <td>@item.ContarctFor</td>
                                @if (@item.FrmDate != null)
                                {
                                    <td>@item.FrmDate.Value.ToString("dd/MM/yyyy") - @item.ToDate.Value.ToString("dd/MM/yyyy")</td>
                                }
                                else
                                {
                                    <td>-</td>   
                                }
                                <td>@item.ContractWith</td>
                                <td>@item.Amount</td>
                                @if(@item.FilePath!=null)
                                {
                                <td><a href="@Url.Content(@item.FilePath)" target="_blank">@item.FileName</a></td>
                                }
                                else
                                {
                                 <td>-</td>   
                                }

                                <td>@Html.ActionLink(" ", "Edit", new { @id = @item.ContID, @menuId = Convert.ToInt32(Request.QueryString["menuid"]) }, new { @class = "fa fa-pencil-square fa-lg" })
                                    &nbsp;@Html.ActionLink(" ", "View", new { @id = @item.ContID, @menuId = Convert.ToInt32(Request.QueryString["menuid"]) }, new { @class = "fa fa-eye" })
                                    @*@Html.ActionLink("Edit", "Edit", new {@id = @item.id , @menuId = Convert.ToInt32(Request.QueryString["menuid"])})*@</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
   
    
    
}